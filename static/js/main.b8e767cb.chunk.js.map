{"version":3,"sources":["components/Container/Container.jsx","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["useStyles","createUseStyles","container","marginTop","padding","width","Container","children","classes","className","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","filterContacts","form","border","borderRadius","button","ContactForm","useState","setName","setNumber","dispatch","useDispatch","onSubmit","e","preventDefault","type","onChange","target","value","marginLeft","cursor","listItem","display","justifyContent","marginBottom","borderBottomStyle","ContactItem","contact","onClick","list","ContactList","contacts","useSelector","state","items","filter","normalizeFilter","toLowerCase","filtrContactList","includes","map","Filter","searchChange","setSearchChange","App","createReducer","action","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b8e767cb.chunk.js","sourcesContent":["import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    marginTop: \"20px\",\r\n    padding: \"20px\",\r\n    width: \"300px\",\r\n  },\r\n});\r\nconst Container = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n\r\nexport const filterContacts = createAction('contacts/filter');\r\n","import { useState } from 'react';\r\n// import { connect } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-actions';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  form: {\r\n    padding: '5px',\r\n    border: ['1px', 'solid', '#2f2f2f'],\r\n    borderRadius: '4px',\r\n  },\r\n  button: {\r\n    marginTop: '10px',\r\n  },\r\n});\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNameChange = e => setName(e.target.value);\r\n  const handleNumberChange = e => setNumber(e.target.value);\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(name);\r\n    if (name === '') return;\r\n    dispatch(addContact({ name, number }));\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <form className={classes.form} onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>\r\n          <p>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            // name='name'\r\n            onChange={handleNameChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            // name='name'\r\n            onChange={handleNumberChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button className={classes.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onSubmit: name => dispatch(addContact(name)),\r\n// });\r\n\r\nexport default ContactForm;\r\n\r\n","import {  useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\r\nimport { createUseStyles } from 'react-jss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    marginLeft: '10px',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n  },\r\n  listItem: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '10px',\r\n    // border: \"borderTopStyle\",\r\n    borderBottomStyle: 'outset',\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ contact: { id, name, number } }) => {\r\n  const dispatch = useDispatch();\r\n  const handelDelete = () => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <li className={classes.listItem}>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={handelDelete} className={classes.button}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n","import ContactItem from '../ContactItem/ContactItem';\r\nimport { useSelector } from 'react-redux';\r\n// import { filterContacts } from '../../redux/contacts/contacts-actions';\r\nimport { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    marginBottom: '10px',\r\n  },\r\n});\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const classes = useStyles();\r\n\r\n  const normalizeFilter = filter.toLowerCase();\r\n  const filtrContactList = contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizeFilter)\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ul className={classes.list}>\r\n        {filtrContactList.map(contact => (\r\n          <ContactItem key={contact.id} contact={contact} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = () => {\r\n  const [searchChange, setSearchChange] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSearchChange = e => {\r\n    setSearchChange(e.target.value);\r\n  };\r\n  dispatch(filterContacts(searchChange));\r\n  return (\r\n    <>\r\n      <p>Find contacts by name </p>\r\n      <input type=\"text\" onChange={handleSearchChange}  />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n \n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {/* <Filter onChange={handleSearchChange} /> */}\n      <Filter  />\n      <ContactList />\n      {/* <ContactList contacts={filtrContactList} onDelete={handleDeleteContact} /> */}\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from './contacts-actions';\r\n\r\nconst initialState = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\n// const items = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case types.ADD:\r\n//       if (state.find(({ name }) => name === action.payload.name)) {\r\n//         alert(`${action.payload.name} is already in contacts`);\r\n//         return state;\r\n//       }\r\n\r\n// const items = createReducer(initialState, {\r\n//   [addContact]: (state, action) => {\r\n//     if (state.find(({ name }) => name === action.payload.name)) {\r\n//       alert(`${action.payload.name} is already in contacts`);\r\n//     } else {\r\n//       // console.log('contact+');\r\n//       // [...state, action.payload]\r\n//     }\r\n//   },\r\n//   [deleteContact]: (state, action) =>\r\n//     state.filter(contact => contact.id !== action.payload),\r\n// });\r\n\r\n\r\nconst items = createReducer(initialState, {\r\n  [addContact]: (state, action) => [...state, action.payload],\r\n  [deleteContact]: (state, action) =>\r\n    state.filter(contact => contact.id !== action.payload),\r\n});\r\n\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { combineReducers } from 'redux';\r\nimport {\r\n  configureStore,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import persistReducer from 'redux-persist/es/persistReducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import \"./index.css\";\nimport App from './App';\nimport store from './redux/store';\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}